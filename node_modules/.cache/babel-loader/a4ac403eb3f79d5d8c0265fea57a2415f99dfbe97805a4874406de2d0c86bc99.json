{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cesar\\\\Development\\\\Projects\\\\Web_IQGeoSpatial\\\\src\\\\hooks\\\\useAuth.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useState, useEffect, createContext, useContext } from 'react';\nimport { supabase } from '../utils/supabaseClient';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [session, setSession] = useState(null);\n  const [profile, setProfile] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Función para obtener el perfil del usuario\n  const getProfile = async user => {\n    if (!user) return null;\n    const {\n      data,\n      error\n    } = await supabase.from('profiles').select('*').eq('id', user.id).single();\n    if (error) {\n      console.error('Error fetching profile:', error);\n      return null;\n    }\n    return data;\n  };\n  useEffect(() => {\n    setLoading(true);\n\n    // El listener onAuthStateChange es la única fuente de verdad.\n    // Se dispara una vez al cargar la página (con el evento INITIAL_SESSION)\n    // y luego cada vez que el estado de autenticación cambia.\n    const {\n      data: {\n        subscription\n      }\n    } = supabase.auth.onAuthStateChange(async (_event, session) => {\n      try {\n        setSession(session);\n        const userProfile = session ? await getProfile(session.user) : null;\n        setProfile(userProfile);\n      } catch (e) {\n        console.error(\"Error durante el cambio de estado de autenticación:\", e);\n      } finally {\n        // Es crucial que setLoading(false) se llame aquí para que la app no se quede \"pegada\".\n        // Se ejecuta después de la carga inicial y en cada cambio.\n        setLoading(false);\n      }\n    });\n    return () => subscription.unsubscribe();\n  }, []);\n  const value = {\n    session,\n    profile,\n    loading\n  };\n\n  // El proveedor ahora solo se encarga de proveer el contexto.\n  // Los componentes hijos decidirán qué mostrar basándose en el estado 'loading'.\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 10\n  }, this);\n};\n_s(AuthProvider, \"2PwuXsbjoKdj5teh7kEvBd7NSbE=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["useState","useEffect","createContext","useContext","supabase","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","session","setSession","profile","setProfile","loading","setLoading","getProfile","user","data","error","from","select","eq","id","single","console","subscription","auth","onAuthStateChange","_event","userProfile","e","unsubscribe","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","undefined","Error","$RefreshReg$"],"sources":["C:/Users/cesar/Development/Projects/Web_IQGeoSpatial/src/hooks/useAuth.js"],"sourcesContent":["import { useState, useEffect, createContext, useContext } from 'react';\r\nimport { supabase } from '../utils/supabaseClient';\r\n\r\nconst AuthContext = createContext(null);\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [session, setSession] = useState(null);\r\n  const [profile, setProfile] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Función para obtener el perfil del usuario\r\n  const getProfile = async (user) => {\r\n    if (!user) return null;\r\n    const { data, error } = await supabase\r\n      .from('profiles')\r\n      .select('*')\r\n      .eq('id', user.id)\r\n      .single();\r\n    if (error) {\r\n      console.error('Error fetching profile:', error);\r\n      return null;\r\n    }\r\n    return data;\r\n  };\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n\r\n    // El listener onAuthStateChange es la única fuente de verdad.\r\n    // Se dispara una vez al cargar la página (con el evento INITIAL_SESSION)\r\n    // y luego cada vez que el estado de autenticación cambia.\r\n    const { data: { subscription } } = supabase.auth.onAuthStateChange(async (_event, session) => {\r\n      try {\r\n        setSession(session);\r\n        const userProfile = session ? await getProfile(session.user) : null;\r\n        setProfile(userProfile);\r\n      } catch (e) {\r\n        console.error(\"Error durante el cambio de estado de autenticación:\", e);\r\n      } finally {\r\n        // Es crucial que setLoading(false) se llame aquí para que la app no se quede \"pegada\".\r\n        // Se ejecuta después de la carga inicial y en cada cambio.\r\n        setLoading(false);\r\n      }\r\n    });\r\n\r\n    return () => subscription.unsubscribe();\r\n  }, []);\r\n\r\n  const value = { session, profile, loading };\r\n\r\n  // El proveedor ahora solo se encarga de proveer el contexto.\r\n  // Los componentes hijos decidirán qué mostrar basándose en el estado 'loading'.\r\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\r\n};\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};"],"mappings":";;;AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,aAAa,EAAEC,UAAU,QAAQ,OAAO;AACtE,SAASC,QAAQ,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,WAAW,gBAAGL,aAAa,CAAC,IAAI,CAAC;AAEvC,OAAO,MAAMM,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;;EAE5C;EACA,MAAMiB,UAAU,GAAG,MAAOC,IAAI,IAAK;IACjC,IAAI,CAACA,IAAI,EAAE,OAAO,IAAI;IACtB,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAG,MAAMhB,QAAQ,CACnCiB,IAAI,CAAC,UAAU,CAAC,CAChBC,MAAM,CAAC,GAAG,CAAC,CACXC,EAAE,CAAC,IAAI,EAAEL,IAAI,CAACM,EAAE,CAAC,CACjBC,MAAM,CAAC,CAAC;IACX,IAAIL,KAAK,EAAE;MACTM,OAAO,CAACN,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/C,OAAO,IAAI;IACb;IACA,OAAOD,IAAI;EACb,CAAC;EAEDlB,SAAS,CAAC,MAAM;IACde,UAAU,CAAC,IAAI,CAAC;;IAEhB;IACA;IACA;IACA,MAAM;MAAEG,IAAI,EAAE;QAAEQ;MAAa;IAAE,CAAC,GAAGvB,QAAQ,CAACwB,IAAI,CAACC,iBAAiB,CAAC,OAAOC,MAAM,EAAEnB,OAAO,KAAK;MAC5F,IAAI;QACFC,UAAU,CAACD,OAAO,CAAC;QACnB,MAAMoB,WAAW,GAAGpB,OAAO,GAAG,MAAMM,UAAU,CAACN,OAAO,CAACO,IAAI,CAAC,GAAG,IAAI;QACnEJ,UAAU,CAACiB,WAAW,CAAC;MACzB,CAAC,CAAC,OAAOC,CAAC,EAAE;QACVN,OAAO,CAACN,KAAK,CAAC,qDAAqD,EAAEY,CAAC,CAAC;MACzE,CAAC,SAAS;QACR;QACA;QACAhB,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC,CAAC;IAEF,OAAO,MAAMW,YAAY,CAACM,WAAW,CAAC,CAAC;EACzC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,KAAK,GAAG;IAAEvB,OAAO;IAAEE,OAAO;IAAEE;EAAQ,CAAC;;EAE3C;EACA;EACA,oBAAOT,OAAA,CAACC,WAAW,CAAC4B,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAzB,QAAA,EAAEA;EAAQ;IAAA2B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAuB,CAAC;AAC9E,CAAC;AAAC7B,EAAA,CAhDWF,YAAY;AAAAgC,EAAA,GAAZhC,YAAY;AAkDzB,OAAO,MAAMiC,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC3B,MAAMC,OAAO,GAAGxC,UAAU,CAACI,WAAW,CAAC;EACvC,IAAIoC,OAAO,KAAKC,SAAS,EAAE;IACzB,MAAM,IAAIC,KAAK,CAAC,6CAA6C,CAAC;EAChE;EACA,OAAOF,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,OAAO;AAAA,IAAAD,EAAA;AAAAM,YAAA,CAAAN,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}